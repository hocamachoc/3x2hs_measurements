;params.ini

[runtime]
sampler = test
root = ${COSMOSIS_SRC_DIR}
; pre_script=./pre_script.sh

[DEFAULT]
BASELINE_DIR=.
DATAVECTOR_DIR=.
2PT_FILE = data_vectors/${DATAFILE}
2PT_DATA_SETS = shear_cl galaxy_shear_cl galaxy_cl
RUN_NAME = . ; ERROR
; use as the last item in the pipeline to switch between 2pt_like and save_2pt
ACTION = 2pt_like


[multinest]
max_iterations=50000
multinest_outfile_root=%(RUN_NAME)s/mn_${DATAFILE}_${SCALE_CUTS}_${DEMODEL}
resume=T
# Testing with Posteriors only: These settings are very fast (~6h, 128 cores)
# and produce reasonably good posteriors, but completely unreliable evidences. 
# Useful for very preliminary results and debugging:
; live_points=250
; efficiency=0.3
; tolerance=0.01
; constant_efficiency=F
#this is usually known as the "suggested standard run"
#(should give decent results for posteriors and evidence in a Y1KP-like analysis) 
#depending on your applications, it could be inappropriate
live_points=500
efficiency=0.3
tolerance=0.1
constant_efficiency=F

[polychord]
live_points=250 ;Setting to ~10*nDims.
polychord_outfile_root=%(RUN_NAME)s/poly_${DATAFILE}_%(RUN_NAME)s_${SCALE_CUTS}
resume=T
;compression_factor=                                                                                                      
;max_iteration=50000 ;Like multinest                                                                                      
num_repeats=60 ;Should be around 2*nDims (WH) or 3*nslow *(JZ)                                                            
feedback = 3
;nprior=                                                                                                                  
;num_repeats_factor = 2 ;replaces the old num_repeats parameter. Set from 2-5 (Troxel)                                    
tolerance=0.1
;log_zero=                                                                                                                
fast_fraction = 0.1


[output]
filename= %(RUN_NAME)s/chain_%(RUN_NAME)s_${DATAFILE}_${SCALE_CUTS}_${DEMODEL}.txt
format=text
lock=F
privacy=F

[emcee]
walkers = 100
samples = 1000
nsteps = 5

[star]
nsample_dimension = 50


[test]
save_dir=%(RUN_NAME)s/test_${DATAFILE}_%(RUN_NAME)s
fatal_errors=T

[add_pm]
file=cosmosis-des-library/tcp/pm_marg/addpm_to_gammat.py
add_togammat = False
use_fiducial = True

[pipeline]
;commented below: version without PM-marginalization
;modules = consistency camb halofit extrapolate fits_nz lens_photoz_bias fast_pt source_photoz_bias IA pk_to_cl_gg pk_to_cl add_magnification add_intrinsic add_eb shear_2pt_eplusb shear_2pt_eminusb choose_xip  2pt_gal 2pt_gal_shear shear_m_bias %(ACTION)s
; modules = consistency camb halofit extrapolate fits_nz lens_photoz_bias fast_pt source_photoz_bias IA pk_to_cl_gg_harmonic pk_to_cl_harmonic add_magnification add_intrinsic add_eb shear_2pt_eplusb shear_2pt_eminusb choose_xip  2pt_gal 2pt_gal_shear shear_m_bias add_pm  %(ACTION)s
; modules = consistency camb halofit extrapolate fits_nz lens_photoz_bias fast_pt source_photoz_bias IA pk_to_cl_gg_harmonic pk_to_cl_harmonic add_magnification add_intrinsic shear_m_bias bin_bpws_cl %(ACTION)
modules = consistency camb halofit extrapolate fits_nz lens_photoz_bias fast_pt source_photoz_bias IA pk_to_cl_gg_harmonic pk_to_cl_harmonic shear_m_bias bin_bpws_cl
; %(ACTION)s

quiet=T
timing=F
debug=F
priors = %(RUN_NAME)s/priors.ini
values = %(RUN_NAME)s/values.ini
extra_output = cosmological_parameters/sigma_8 cosmological_parameters/sigma_12

; enable this if your sampler supports it (MN does not)
fast_slow=F
first_fast_module=shear_m_bias


[bin_bias]
file = cosmosis-standard-library/bias/binwise_bias/bin_bias.py
perbin=T

[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=2500
feedback=0
kmin=1e-5
kmax=100.0
nk=400

[halofit]
file = cosmosis-standard-library/boltzmann/halofit_takahashi/halofit_interface.so
nk=700

[extrapolate]
file = cosmosis-standard-library/boltzmann/extrapolate/extrapolate_power.py
kmax = 500.

[fits_nz]
file = cosmosis-standard-library/number_density/load_nz_fits/load_nz_fits.py
nz_file = %(2PT_FILE)s
data_sets = lens source
prefix_section = T
prefix_extension = T

#the two modules below might be replaced in the future by a different parametrization
[lens_photoz_bias]
file = cosmosis-standard-library/number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_lens
bias_section = lens_photoz_errors
interpolation = linear

[source_photoz_bias]
file = cosmosis-standard-library/number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_source
bias_section = wl_photoz_errors
interpolation = linear

[IA_old]
#linear_alignments_interface.py
file=cosmosis-standard-library/intrinsic_alignments/la_model/linear_alignments_interface.py
method=bk_corrected
do_galaxy_intrinsic=T

[IA]
file=${COSMOSIS_SRC_DIR}/cosmosis-des-library/IAs/tatt/tatt_interface.py
mode=all
sub_lowk=F
sub_const=F
include_s2_terms=F
do_galaxy_intrinsic=F
ia_model=tatt
Asigma8=F
linterp=F


[ia_z_field]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/intrinsic_alignments/z_powerlaw/ia_z_powerlaw.py
do_galaxy_intrinsic = T

[pk_to_cl]
file = cosmosis-standard-library/structure/projection/project_2d.py
ell_min_logspaced = 0.1
ell_max_logspaced = 5.0e5
n_ell_logspaced = 100 
shear-shear = source-source
shear-intrinsic = source-source
intrinsic-intrinsic = source-source
intrinsicb-intrinsicb=source-source
lingal-shear = lens-source
lingal-intrinsic = lens-source
lingal-magnification = lens-lens
magnification-shear = lens-source
magnification-magnification = lens-lens
magnification-intrinsic = lens-source 

verbose = F
get_kernel_peaks = F
sig_over_dchi = 20. 
shear_kernel_dchi = 10. 

[pk_to_cl_gg]
file = cosmosis-standard-library/structure/projection/project_2d.py
lingal-lingal = lens-lens
do_exact = lingal-lingal
do_rsd = True
ell_min_linspaced = 1
; ell_min_linspaced=1
ell_max_linspaced = 4
; ell_max_linspaced=9
n_ell_linspaced = 5
; n_ell_linspaced=10
; ell_min_logspaced=10.
; ell_max_logspaced=1.e5
ell_min_logspaced = 5.
ell_max_logspaced = 5.e5
n_ell_logspaced = 80
; n_ell_logspaced=150
limber_ell_start = 200
; limber_ell_start=201
ell_max_logspaced=1.e5
auto_only=lingal-lingal
sig_over_dchi_exact = 3.5

[add_magnification]
file = cosmosis-standard-library/structure/projection/add_magnification.py
include_intrinsic=T

[add_intrinsic]
file=cosmosis-standard-library/shear/add_intrinsic/add_intrinsic.py
shear-shear=T
position-shear=T
perbin=F

[add_eb]
file = cosmosis-des-library/IAs/add_bmode_cl/add_bmode_cl.py


[choose_xip]
file = cosmosis-standard-library/utility/tools/copy_section.py
# copy shear_xi_eplusb_plus->shear_xi_plus
# and  shear_xi_eminusb_minus->shear_xi_minus
source =  shear_xi_eplusb_plus   shear_xi_eminusb_minus
dest =    shear_xi_plus          shear_xi_minus

[fast_pt]
file = ${COSMOSIS_SRC_DIR}/cosmosis-des-library/tcp/fast_pt/fast_pt_interface.py
do_ia = T
k_res_fac = 0.5
verbose = F

[shear_m_bias]
file = cosmosis-standard-library/shear/shear_bias/shear_m_bias.py
m_per_bin = True
; Despite the parameter name, this can operate on xi as well as C_ell.
cl_section = shear_cl
cross_section = galaxy_shear_cl
; cl_section = shear_xi_plus shear_xi_minus
; cross_section = galaxy_shear_xi
verbose = F

[shear_2pt_eplusb]
file = cosmosis-standard-library/shear/cl_to_xi_fullsky/cl_to_xi_interface.py
ell_max = 40000
xi_type='22'
theta_file=%(2PT_FILE)s
bin_avg = T
input_section_name = shear_cl_eplusb
output_section_name = shear_xi_eplusb

[shear_2pt_eminusb]
file = cosmosis-standard-library/shear/cl_to_xi_fullsky/cl_to_xi_interface.py
ell_max = 40000
xi_type='22'
theta_file=%(2PT_FILE)s
bin_avg = T
input_section_name = shear_cl_eminusb
output_section_name = shear_xi_eminusb


[2pt_gal]
file = cosmosis-standard-library/shear/cl_to_xi_fullsky/cl_to_xi_interface.py
ell_max = 40000
xi_type='00'
theta_file=%(2PT_FILE)s
bin_avg = T

[2pt_gal_shear]
file = cosmosis-standard-library/shear/cl_to_xi_fullsky/cl_to_xi_interface.py
ell_max = 40000
xi_type='02'
theta_file=%(2PT_FILE)s
bin_avg = T


[2pt_like]
file = cosmosis-standard-library/likelihood/2pt/2pt_like_allmarg.py
;settings for pm-marginalization
;;;;;;;
do_pm_marg = True
do_pm_sigcritinv = True
sigma_a=10000.0
no_det_fac = True
;;;;;;;
data_file = %(2PT_FILE)s
data_sets = %(2PT_DATA_SETS)s
make_covariance=F
covmat_name=COVMAT
%include ${SCALE_CUT_DIR}/${SCALE_CUTS}


[save_2pt]
file = cosmosis-standard-library/likelihood/2pt/save_2pt.py
theta_min = 2.5
theta_max = 250.0
n_theta = 20
real_space = T
make_covariance = F
shear_nz_name = nz_source
position_nz_name = nz_lens
filename = data_vectors/sim_%(RUN_NAME)s.fits
overwrite = T
auto_only = galaxy_xi
;cut_wtheta = 1,2 1,3 2,3 1,4 2,4 3,4 1,5 2,5 3,5 4,5
spectrum_sections = shear_xi_plus shear_xi_minus galaxy_shear_xi galaxy_xi
output_extensions = xip xim gammat wtheta
two_thirds_midpoint = T
copy_covariance=data_vectors/${DATAFILE}



[sim_fits_nz_lens]
file = cosmosis-standard-library/number_density/load_nz_fits/load_nz_fits.py
nz_file = nz_inputs/nz_y3_redmagic_v6.4.22_v2_gold_2.2.1_combined_max_bin_edges.fits
data_sets = lens
prefix_section = T
prefix_extension = T

[sim_fits_nz_source]
file = cosmosis-standard-library/number_density/load_nz_fits/load_nz_fits.py
nz_file = nz_inputs/barcelona_lens1.fits
data_sets = source
prefix_section = T
prefix_extension = T

[pk_to_cl_gg_harmonic]
file = cosmosis-standard-library/structure/projection/project_2d.py
lingal-lingal = lens-lens
do_exact = lingal-lingal
do_rsd = True
ell_min_linspaced = 0
ell_max_linspaced = 99
n_ell_linspaced = 100
ell_min_logspaced =100.
ell_max_logspaced = 20000.
n_ell_logspaced = 600
limber_ell_start = 200
; auto_only=lingal-lingal
sig_over_dchi_exact = 3.5

[pk_to_cl_harmonic]
file = cosmosis-standard-library/structure/projection/project_2d.py
ell_min_linspaced = 0
ell_max_linspaced = 99
n_ell_linspaced = 100
ell_min_logspaced =100.
ell_max_logspaced = 20000.
n_ell_logspaced = 600
shear-shear = source-source
shear-intrinsic = source-source
intrinsic-intrinsic = source-source
intrinsicb-intrinsicb=source-source
lingal-shear = lens-source
lingal-intrinsic = lens-source
lingal-magnification = lens-lens
magnification-shear = lens-source
magnification-magnification = lens-lens
magnification-intrinsic = lens-source
verbose = F
get_kernel_peaks = F
sig_over_dchi = 20.
shear_kernel_dchi = 10.

[bin_bpws_cl]
; file = cosmosis-standard-library/likelihood/2pt/save_2pt.py
file = ${PWD}/modules/save_flask.py
data_file = %(2PT_FILE)s
data_sets = %(2PT_DATA_SETS)s
ell_min_log = 100
